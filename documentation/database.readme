-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.backorders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  variant_id uuid,
  client_id uuid,
  qty integer,
  requested_at timestamp with time zone DEFAULT now(),
  fulfilled_at timestamp with time zone,
  CONSTRAINT backorders_pkey PRIMARY KEY (id),
  CONSTRAINT backorders_variant_id_fkey FOREIGN KEY (variant_id) REFERENCES public.product_variants(id),
  CONSTRAINT backorders_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id)
);
CREATE TABLE public.brands (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  description text,
  logo_url text,
  website text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT brands_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cart_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cart_id uuid,
  variant_id uuid,
  qty integer NOT NULL DEFAULT 1,
  price_at_addition_cents integer NOT NULL,
  added_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cart_items_pkey PRIMARY KEY (id),
  CONSTRAINT cart_items_cart_id_fkey FOREIGN KEY (cart_id) REFERENCES public.carts(id),
  CONSTRAINT cart_items_variant_id_fkey FOREIGN KEY (variant_id) REFERENCES public.product_variants(id)
);
CREATE TABLE public.cart_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cart_id uuid,
  action text,
  details jsonb,
  performed_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cart_logs_pkey PRIMARY KEY (id),
  CONSTRAINT cart_logs_cart_id_fkey FOREIGN KEY (cart_id) REFERENCES public.carts(id),
  CONSTRAINT cart_logs_performed_by_fkey FOREIGN KEY (performed_by) REFERENCES public.clients(id)
);
CREATE TABLE public.carts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_id uuid,
  currency text DEFAULT 'EUR'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT carts_pkey PRIMARY KEY (id),
  CONSTRAINT carts_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id)
);
CREATE TABLE public.categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  slug text NOT NULL UNIQUE,
  parent_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT categories_pkey PRIMARY KEY (id),
  CONSTRAINT categories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.categories(id)
);
CREATE TABLE public.clients (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  auth_uid uuid NOT NULL UNIQUE,
  role_id integer,
  first_name text NOT NULL,
  last_name text NOT NULL,
  phone text,
  email USER-DEFINED NOT NULL UNIQUE,
  nif_cif text,
  region text,
  city text,
  address_line1 text,
  address_line2 text,
  postal_code text,
  activity text,
  company_name text,
  company_position text,
  is_active boolean DEFAULT true,
  deleted_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_login timestamp with time zone,
  CONSTRAINT clients_pkey PRIMARY KEY (id),
  CONSTRAINT clients_auth_uid_fkey FOREIGN KEY (auth_uid) REFERENCES auth.users(id),
  CONSTRAINT clients_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.customer_roles(id)
);
CREATE TABLE public.coupon_redemptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  coupon_id uuid,
  client_id uuid,
  order_id uuid,
  redeemed_at timestamp with time zone DEFAULT now(),
  CONSTRAINT coupon_redemptions_pkey PRIMARY KEY (id),
  CONSTRAINT coupon_redemptions_coupon_id_fkey FOREIGN KEY (coupon_id) REFERENCES public.coupons(id),
  CONSTRAINT coupon_redemptions_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id),
  CONSTRAINT coupon_redemptions_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.coupons (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  code text NOT NULL UNIQUE,
  description text,
  discount_type text CHECK (discount_type = ANY (ARRAY['percentage'::text, 'fixed'::text])),
  discount_value integer NOT NULL,
  applies_to text CHECK (applies_to = ANY (ARRAY['product'::text, 'category'::text, 'order'::text])),
  target_id uuid,
  usage_limit integer,
  used_count integer DEFAULT 0,
  valid_from timestamp with time zone,
  valid_to timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT coupons_pkey PRIMARY KEY (id)
);
CREATE TABLE public.customer_roles (
  id integer NOT NULL DEFAULT nextval('customer_roles_id_seq'::regclass),
  name text NOT NULL UNIQUE,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customer_roles_pkey PRIMARY KEY (id)
);
CREATE TABLE public.invoice_counters (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  prefix text DEFAULT ''::text,
  suffix text DEFAULT ''::text,
  next_number integer DEFAULT 1,
  CONSTRAINT invoice_counters_pkey PRIMARY KEY (id)
);
CREATE TABLE public.invoices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_id uuid,
  order_id uuid,
  invoice_number integer NOT NULL,
  prefix text DEFAULT ''::text,
  suffix text DEFAULT ''::text,
  total_cents integer NOT NULL,
  currency text DEFAULT 'EUR'::text,
  created_at timestamp with time zone DEFAULT now(),
  due_date timestamp with time zone,
  CONSTRAINT invoices_pkey PRIMARY KEY (id),
  CONSTRAINT invoices_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id),
  CONSTRAINT invoices_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_id uuid,
  type text,
  content text,
  read boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id)
);
CREATE TABLE public.order_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  order_id uuid,
  variant_id uuid,
  qty integer NOT NULL,
  price_cents integer NOT NULL,
  CONSTRAINT order_items_pkey PRIMARY KEY (id),
  CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT order_items_variant_id_fkey FOREIGN KEY (variant_id) REFERENCES public.product_variants(id)
);
CREATE TABLE public.order_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  order_id uuid,
  action text,
  details jsonb,
  performed_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  status text,
  comment text,
  CONSTRAINT order_logs_pkey PRIMARY KEY (id),
  CONSTRAINT order_logs_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT order_logs_performed_by_fkey FOREIGN KEY (performed_by) REFERENCES public.clients(id)
);
CREATE TABLE public.orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_id uuid,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'confirmed'::text, 'processing'::text, 'shipped'::text, 'delivered'::text, 'cancelled'::text, 'refunded'::text])),
  total_cents integer,
  shipping_address jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  billing_address jsonb,
  guest_email text,
  payment_status text DEFAULT 'pending'::text CHECK (payment_status = ANY (ARRAY['pending'::text, 'paid'::text, 'failed'::text, 'refunded'::text, 'cancelled'::text])),
  shipping_method_id uuid,
  payment_method_id uuid,
  coupon_code text,
  discount_cents integer DEFAULT 0,
  shipping_cost_cents integer DEFAULT 0,
  subtotal_cents integer,
  confirmation_number text,
  CONSTRAINT orders_pkey PRIMARY KEY (id),
  CONSTRAINT orders_shipping_method_id_fkey FOREIGN KEY (shipping_method_id) REFERENCES public.shipping_methods(id),
  CONSTRAINT orders_payment_method_id_fkey FOREIGN KEY (payment_method_id) REFERENCES public.payment_methods(id),
  CONSTRAINT orders_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id)
);
CREATE TABLE public.password_reset_tokens (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email character varying NOT NULL,
  token character varying NOT NULL UNIQUE,
  expires_at timestamp with time zone NOT NULL,
  used boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT password_reset_tokens_pkey PRIMARY KEY (id)
);
CREATE TABLE public.payment_methods (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  provider text,
  active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT payment_methods_pkey PRIMARY KEY (id)
);
CREATE TABLE public.payment_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  order_id uuid NOT NULL,
  payment_method_id uuid,
  transaction_id text,
  authorization_code text,
  amount_cents integer NOT NULL,
  currency text DEFAULT 'EUR'::text,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'authorized'::text, 'completed'::text, 'failed'::text, 'cancelled'::text, 'refunded'::text])),
  response_code text,
  response_message text,
  card_type text,
  card_country text,
  secure_payment text,
  raw_response jsonb,
  created_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  CONSTRAINT payment_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT payment_transactions_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT payment_transactions_payment_method_id_fkey FOREIGN KEY (payment_method_id) REFERENCES public.payment_methods(id)
);
CREATE TABLE public.product_categories (
  product_id uuid NOT NULL,
  category_id uuid NOT NULL,
  CONSTRAINT product_categories_pkey PRIMARY KEY (product_id, category_id),
  CONSTRAINT product_categories_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT product_categories_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id)
);
CREATE TABLE public.product_images (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid,
  url text NOT NULL,
  alt text,
  position integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT product_images_pkey PRIMARY KEY (id),
  CONSTRAINT product_images_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.product_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid,
  action text,
  changes jsonb,
  performed_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT product_logs_pkey PRIMARY KEY (id),
  CONSTRAINT product_logs_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT product_logs_performed_by_fkey FOREIGN KEY (performed_by) REFERENCES public.clients(id)
);
CREATE TABLE public.product_resources (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid,
  type text CHECK (type = ANY (ARRAY['manual'::text, 'pdf'::text, 'video'::text, 'file'::text])),
  url text NOT NULL,
  label text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT product_resources_pkey PRIMARY KEY (id),
  CONSTRAINT product_resources_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.product_reviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid,
  client_id uuid,
  rating integer CHECK (rating >= 1 AND rating <= 5),
  comment text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT product_reviews_pkey PRIMARY KEY (id),
  CONSTRAINT product_reviews_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT product_reviews_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.clients(id)
);
CREATE TABLE public.product_variants (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid,
  sku text,
  title text,
  price_public_cents integer NOT NULL,
  stock integer NOT NULL DEFAULT 0,
  weight_grams integer,
  dimensions jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT product_variants_pkey PRIMARY KEY (id),
  CONSTRAINT product_variants_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id)
);
CREATE TABLE public.products (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  slug text NOT NULL UNIQUE,
  title text NOT NULL,
  short_description text,
  description text,
  is_new boolean DEFAULT false,
  is_on_sale boolean DEFAULT false,
  meta_title text,
  meta_description text,
  og_image text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  brand_id uuid,
  CONSTRAINT products_pkey PRIMARY KEY (id),
  CONSTRAINT products_brand_id_fkey FOREIGN KEY (brand_id) REFERENCES public.brands(id)
);
CREATE TABLE public.role_prices (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  variant_id uuid,
  role_id integer,
  price_cents integer NOT NULL,
  CONSTRAINT role_prices_pkey PRIMARY KEY (id),
  CONSTRAINT role_prices_variant_id_fkey FOREIGN KEY (variant_id) REFERENCES public.product_variants(id),
  CONSTRAINT role_prices_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.customer_roles(id)
);
CREATE TABLE public.shipping_methods (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  price_cents integer NOT NULL,
  estimated_days integer,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT shipping_methods_pkey PRIMARY KEY (id)
);
CREATE TABLE public.stock_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  variant_id uuid,
  change_qty integer,
  reason text,
  previous_stock integer,
  new_stock integer,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT stock_history_pkey PRIMARY KEY (id),
  CONSTRAINT stock_history_variant_id_fkey FOREIGN KEY (variant_id) REFERENCES public.product_variants(id)
);
CREATE TABLE public.variant_images (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  variant_id uuid,
  url text NOT NULL,
  alt text,
  position integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT variant_images_pkey PRIMARY KEY (id),
  CONSTRAINT variant_images_variant_id_fkey FOREIGN KEY (variant_id) REFERENCES public.product_variants(id)
);