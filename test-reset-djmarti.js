#!/usr/bin/env node
/**
 * Script para probar el flujo de recuperaci√≥n de contrase√±a con djmartiiservicios@gmail.com
 */

import dotenv from 'dotenv'

// Cargar variables de entorno
dotenv.config({ path: '.env.local' })
dotenv.config({ path: '.env' })

async function testPasswordResetForUser() {
  const testEmail = 'djmartiiservicios@gmail.com'
  
  console.log('üß™ PROBANDO RECUPERACI√ìN DE CONTRASE√ëA')
  console.log('='.repeat(50))
  console.log(`üìß Email de prueba: ${testEmail}`)
  console.log('')

  // 1. Verificar variables de entorno cr√≠ticas
  console.log('1Ô∏è‚É£ Verificando configuraci√≥n...')
  
  const requiredVars = [
    'NEXT_PUBLIC_SUPABASE_URL',
    'NEXT_PUBLIC_SUPABASE_ANON_KEY', 
    'NEXT_PUBLIC_SITE_URL'
  ]

  let configOk = true
  requiredVars.forEach(varName => {
    const value = process.env[varName]
    if (value) {
      console.log(`‚úÖ ${varName}: ${varName === 'NEXT_PUBLIC_SUPABASE_ANON_KEY' ? value.substring(0, 20) + '...' : value}`)
    } else {
      console.log(`‚ùå ${varName}: FALTA`)
      configOk = false
    }
  })

  if (!configOk) {
    console.log('‚ùå Configuraci√≥n incompleta, abortando prueba')
    return
  }

  console.log('')

  // 2. Probar el endpoint de recuperaci√≥n directamente
  console.log('2Ô∏è‚É£ Probando endpoint de recuperaci√≥n...')
  
  try {
    // Probar en producci√≥n directamente
    const prodUrl = 'https://lacasadelsueloradiante.es'
    console.log(`üåê Probando en producci√≥n: ${prodUrl}`)
    
    const response = await fetch(`${prodUrl}/api/send-reset-email`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ email: testEmail })
    })

    const result = await response.json()
    
    if (response.ok) {
      console.log('‚úÖ API de reset email funciona en producci√≥n')
      console.log(`   Respuesta: ${result.message}`)
      console.log('üìß ¬°Email de recuperaci√≥n enviado! Revisa djmartiiservicios@gmail.com')
    } else {
      console.log('‚ùå Error en API de reset email en producci√≥n')
      console.log(`   Error: ${result.error}`)
      console.log(`   Status: ${response.status}`)
    }
  } catch (error) {
    console.log('‚ùå Error conectando con la API')
    console.log(`   Error: ${error.message}`)
  }

  console.log('')

  // 3. Informaci√≥n del flujo completo
  console.log('3Ô∏è‚É£ Informaci√≥n del flujo completo:')
  console.log('')
  
  const siteUrl = 'https://lacasadelsueloradiante.es'
  
  console.log('üìã PASOS PARA PROBAR MANUALMENTE:')
  console.log(`1. Ir a: ${siteUrl}/auth/forgot-password`)
  console.log(`2. Introducir email: ${testEmail}`)
  console.log('3. Hacer clic en "Enviar enlace de recuperaci√≥n"')
  console.log('4. Revisar el email en djmartiiservicios@gmail.com')
  console.log('5. Hacer clic en el enlace del email')
  console.log('6. Introducir nueva contrase√±a')
  
  console.log('')
  console.log('üîó URLs importantes:')
  console.log(`   Recuperar: ${siteUrl}/auth/forgot-password`)
  console.log(`   Reset: ${siteUrl}/auth/reset-password`)
  console.log(`   Login: ${siteUrl}/auth/login`)
  
  console.log('')
  console.log('üìß IMPORTANTE - Configuraci√≥n de emails:')
  console.log('   ‚Ä¢ Supabase maneja el env√≠o de emails autom√°ticamente')
  console.log('   ‚Ä¢ Los emails se env√≠an desde la configuraci√≥n SMTP de Supabase')
  console.log('   ‚Ä¢ Verifica en el dashboard de Supabase si los emails est√°n configurados')
  console.log('   ‚Ä¢ URL del dashboard: https://supabase.lacasadelsueloradianteapp.com')
  
  console.log('')
  console.log('üéØ QU√â REVISAR SI NO LLEGA EL EMAIL:')
  console.log('1. Carpeta de spam/correo no deseado')
  console.log('2. Configuraci√≥n SMTP en Supabase Auth Settings')
  console.log('3. Logs de Supabase para ver errores de env√≠o')
  console.log('4. Que el usuario exista en la base de datos')

  console.log('')
  console.log('‚úÖ Script completado. Revisa djmartiiservicios@gmail.com')
}

// Ejecutar el test
testPasswordResetForUser().catch(console.error)