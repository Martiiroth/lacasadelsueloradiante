#!/bin/bash

# Script para probar el sistema de recuperaci√≥n de contrase√±as
# Uso: ./test-password-reset.sh usuario@email.com

if [ $# -eq 0 ]; then
    echo "‚ùå Debes proporcionar un email"
    echo "Uso: $0 usuario@email.com"
    exit 1
fi

EMAIL="$1"
BASE_URL="${NEXT_PUBLIC_SITE_URL:-http://localhost:3000}"

echo "üîÑ Probando sistema de recuperaci√≥n de contrase√±as..."
echo "üìß Email: $EMAIL"
echo "üåê URL base: $BASE_URL"
echo ""

# 1. Solicitar reset de contrase√±a
echo "1Ô∏è‚É£ Enviando solicitud de recuperaci√≥n..."
RESPONSE=$(curl -s -X POST "$BASE_URL/api/send-reset-email" \
    -H "Content-Type: application/json" \
    -d "{\"email\": \"$EMAIL\"}")

echo "Respuesta:"
echo "$RESPONSE" | jq '.' 2>/dev/null || echo "$RESPONSE"
echo ""

# 2. Verificar que se cre√≥ el token en la base de datos
echo "2Ô∏è‚É£ Verificando token en base de datos..."
if command -v psql >/dev/null 2>&1 && [ -n "$DATABASE_URL" ]; then
    psql "$DATABASE_URL" -c "
        SELECT 
            token, 
            email, 
            created_at,
            expires_at,
            used,
            (expires_at > NOW()) as valid
        FROM password_reset_tokens 
        WHERE email = '$EMAIL' 
        ORDER BY created_at DESC 
        LIMIT 1;
    "
else
    echo "‚ö†Ô∏è No se puede conectar a la base de datos (falta psql o DATABASE_URL)"
fi

echo ""
echo "‚úÖ Test completado"
echo ""
echo "üìã Pasos siguientes:"
echo "1. Revisa tu email para el enlace de recuperaci√≥n"
echo "2. Haz clic en el enlace para probar el cambio de contrase√±a"
echo "3. Verifica que el token se marca como 'usado' despu√©s del cambio"